77215c031fb36f2b446a7f7adf7dfb9b
"use strict";

/* istanbul ignore next */
function cov_24d5chq0nb() {
  var path = "/home/user/React Projects/payment-reports-test-task-master-updated/payment-reports-test-task-master/src/components/DonutChart/drawChart.ts";
  var hash = "a6eb735c5d70ee644c76a9007477631adf373ea7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/user/React Projects/payment-reports-test-task-master-updated/payment-reports-test-task-master/src/components/DonutChart/drawChart.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 11
        },
        end: {
          line: 3,
          column: 24
        }
      },
      "2": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 37
        }
      },
      "3": {
        start: {
          line: 5,
          column: 18
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "4": {
        start: {
          line: 6,
          column: 16
        },
        end: {
          line: 66,
          column: 1
        }
      },
      "5": {
        start: {
          line: 7,
          column: 16
        },
        end: {
          line: 7,
          column: 51
        }
      },
      "6": {
        start: {
          line: 8,
          column: 18
        },
        end: {
          line: 8,
          column: 21
        }
      },
      "7": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 53
        }
      },
      "8": {
        start: {
          line: 10,
          column: 14
        },
        end: {
          line: 17,
          column: 91
        }
      },
      "9": {
        start: {
          line: 18,
          column: 23
        },
        end: {
          line: 21,
          column: 25
        }
      },
      "10": {
        start: {
          line: 22,
          column: 23
        },
        end: {
          line: 24,
          column: 48
        }
      },
      "11": {
        start: {
          line: 24,
          column: 30
        },
        end: {
          line: 24,
          column: 45
        }
      },
      "12": {
        start: {
          line: 25,
          column: 15
        },
        end: {
          line: 28,
          column: 16
        }
      },
      "13": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 41,
          column: 7
        }
      },
      "14": {
        start: {
          line: 32,
          column: 41
        },
        end: {
          line: 32,
          column: 84
        }
      },
      "15": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 36,
          column: 63
        }
      },
      "16": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 40,
          column: 10
        }
      },
      "17": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 30
        }
      },
      "18": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 35
        }
      },
      "19": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 55,
          column: 36
        }
      },
      "20": {
        start: {
          line: 45,
          column: 29
        },
        end: {
          line: 45,
          column: 107
        }
      },
      "21": {
        start: {
          line: 49,
          column: 17
        },
        end: {
          line: 49,
          column: 41
        }
      },
      "22": {
        start: {
          line: 49,
          column: 47
        },
        end: {
          line: 49,
          column: 52
        }
      },
      "23": {
        start: {
          line: 49,
          column: 58
        },
        end: {
          line: 49,
          column: 63
        }
      },
      "24": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 59
        }
      },
      "25": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 65,
          column: 33
        }
      },
      "26": {
        start: {
          line: 67,
          column: 0
        },
        end: {
          line: 67,
          column: 28
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 16
          },
          end: {
            line: 6,
            column: 17
          }
        },
        loc: {
          start: {
            line: 6,
            column: 41
          },
          end: {
            line: 66,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 24,
            column: 15
          },
          end: {
            line: 24,
            column: 16
          }
        },
        loc: {
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 24,
            column: 47
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 32,
            column: 23
          },
          end: {
            line: 32,
            column: 24
          }
        },
        loc: {
          start: {
            line: 32,
            column: 39
          },
          end: {
            line: 32,
            column: 86
          }
        },
        line: 32
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 35,
            column: 25
          }
        },
        loc: {
          start: {
            line: 35,
            column: 37
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 35
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 37,
            column: 15
          },
          end: {
            line: 37,
            column: 16
          }
        },
        loc: {
          start: {
            line: 37,
            column: 28
          },
          end: {
            line: 40,
            column: 9
          }
        },
        line: 37
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 45,
            column: 14
          },
          end: {
            line: 45,
            column: 15
          }
        },
        loc: {
          start: {
            line: 45,
            column: 27
          },
          end: {
            line: 45,
            column: 109
          }
        },
        line: 45
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 48,
            column: 27
          },
          end: {
            line: 48,
            column: 28
          }
        },
        loc: {
          start: {
            line: 48,
            column: 40
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 48
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {},
    inputSourceMap: {
      file: "/home/user/React Projects/payment-reports-test-task-master-updated/payment-reports-test-task-master/src/components/DonutChart/drawChart.ts",
      mappings: "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",
      names: [],
      sources: ["/home/user/React Projects/payment-reports-test-task-master-updated/payment-reports-test-task-master/src/components/DonutChart/drawChart.ts"],
      sourcesContent: ["import { select, arc, interpolate, pie } from \"d3\";\nimport { totalDonutValue, calculatePercentage } from \"util/helper\";\nimport { TGenericDataType, GenericTableData } from \"types\";\nimport { colors } from \"util/constants\";\nimport { DType, DataType } from \"./types\";\n\nconst drawChart = (element: string, data: GenericTableData[]) => {\n  const total = totalDonutValue(data);\n  const boxSize = 500;\n\n  select(element).select(\"svg\").remove();\n  const svg = select(element)\n    .append(\"svg\")\n    .attr(\"preserveAspectRatio\", \"xMidYMid meet\")\n    .attr(\"height\", \"100%\")\n    .attr(\"width\", \"100%\")\n    .attr(\"viewBox\", `0 0 ${boxSize} ${boxSize}`)\n    .append(\"g\")\n    .attr(\"transform\", `translate(${boxSize / 2}, ${boxSize / 2})`);\n\n  const arcGenerator: TGenericDataType = arc()\n    .padAngle(0.02)\n    .innerRadius(100)\n    .outerRadius(250);\n\n  const pieGenerator = pie()\n    .startAngle(-0.75 * Math.PI)\n    .value((d: TGenericDataType) => d.value);\n\n  const arcs = svg\n    .selectAll()\n    .data(pieGenerator(data as unknown as DataType))\n    .enter();\n  arcs\n    .append(\"path\")\n    .attr(\"d\", arcGenerator)\n    .style(\"fill\", (d, i) => colors[i % data.length])\n    .transition()\n    .duration(700)\n    .attrTween(\"d\", function (d: DType) {\n      const i = interpolate(d.startAngle, d.endAngle);\n      return function (t) {\n        d.endAngle = i(t);\n        return arcGenerator(d);\n      };\n    });\n\n  arcs\n    .append(\"text\")\n    .attr(\"text-anchor\", \"middle\")\n    .text(\n      (d: TGenericDataType) => `${calculatePercentage(total, d.data.value)}%`\n    ) // label text\n    .style(\"fill\", \"#fff\") // label color\n    .style(\"font-size\", \"30px\") // label size\n    .attr(\"transform\", (d) => {\n      const [x, y] = arcGenerator.centroid(d);\n      return `translate(${x}, ${y})`;\n    })\n    .style(\"font-size\", 0)\n    .transition()\n    .duration(700)\n    .style(\"font-size\", \"26px\");\n\n  // Add inner border\n  svg\n    .append(\"circle\")\n    .attr(\"cx\", 0)\n    .attr(\"cy\", 0)\n    .attr(\"r\", 100) // should be same as innerRadius value\n    .attr(\"fill\", \"transparent\")\n    .transition()\n    .duration(700)\n    .attr(\"stroke-width\", 8);\n};\n\nexport default drawChart;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a6eb735c5d70ee644c76a9007477631adf373ea7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_24d5chq0nb = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_24d5chq0nb();
cov_24d5chq0nb().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
var d3_1 =
/* istanbul ignore next */
(cov_24d5chq0nb().s[1]++, require("d3"));
var helper_1 =
/* istanbul ignore next */
(cov_24d5chq0nb().s[2]++, require("util/helper"));
var constants_1 =
/* istanbul ignore next */
(cov_24d5chq0nb().s[3]++, require("util/constants"));
/* istanbul ignore next */
cov_24d5chq0nb().s[4]++;
var drawChart = function (element, data) {
  /* istanbul ignore next */
  cov_24d5chq0nb().f[0]++;
  var total =
  /* istanbul ignore next */
  (cov_24d5chq0nb().s[5]++, (0, helper_1.totalDonutValue)(data));
  var boxSize =
  /* istanbul ignore next */
  (cov_24d5chq0nb().s[6]++, 500);
  /* istanbul ignore next */
  cov_24d5chq0nb().s[7]++;
  (0, d3_1.select)(element).select("svg").remove();
  var svg =
  /* istanbul ignore next */
  (cov_24d5chq0nb().s[8]++, (0, d3_1.select)(element).append("svg").attr("preserveAspectRatio", "xMidYMid meet").attr("height", "100%").attr("width", "100%").attr("viewBox", "0 0 ".concat(boxSize, " ").concat(boxSize)).append("g").attr("transform", "translate(".concat(boxSize / 2, ", ").concat(boxSize / 2, ")")));
  var arcGenerator =
  /* istanbul ignore next */
  (cov_24d5chq0nb().s[9]++, (0, d3_1.arc)().padAngle(0.02).innerRadius(100).outerRadius(250));
  var pieGenerator =
  /* istanbul ignore next */
  (cov_24d5chq0nb().s[10]++, (0, d3_1.pie)().startAngle(-0.75 * Math.PI).value(function (d) {
    /* istanbul ignore next */
    cov_24d5chq0nb().f[1]++;
    cov_24d5chq0nb().s[11]++;
    return d.value;
  }));
  var arcs =
  /* istanbul ignore next */
  (cov_24d5chq0nb().s[12]++, svg.selectAll().data(pieGenerator(data)).enter());
  /* istanbul ignore next */
  cov_24d5chq0nb().s[13]++;
  arcs.append("path").attr("d", arcGenerator).style("fill", function (d, i) {
    /* istanbul ignore next */
    cov_24d5chq0nb().f[2]++;
    cov_24d5chq0nb().s[14]++;
    return constants_1.colors[i % data.length];
  }).transition().duration(700).attrTween("d", function (d) {
    /* istanbul ignore next */
    cov_24d5chq0nb().f[3]++;
    var i =
    /* istanbul ignore next */
    (cov_24d5chq0nb().s[15]++, (0, d3_1.interpolate)(d.startAngle, d.endAngle));
    /* istanbul ignore next */
    cov_24d5chq0nb().s[16]++;
    return function (t) {
      /* istanbul ignore next */
      cov_24d5chq0nb().f[4]++;
      cov_24d5chq0nb().s[17]++;
      d.endAngle = i(t);
      /* istanbul ignore next */
      cov_24d5chq0nb().s[18]++;
      return arcGenerator(d);
    };
  });
  /* istanbul ignore next */
  cov_24d5chq0nb().s[19]++;
  arcs.append("text").attr("text-anchor", "middle").text(function (d) {
    /* istanbul ignore next */
    cov_24d5chq0nb().f[5]++;
    cov_24d5chq0nb().s[20]++;
    return "".concat((0, helper_1.calculatePercentage)(total, d.data.value), "%");
  }) // label text
  .style("fill", "#fff") // label color
  .style("font-size", "30px") // label size
  .attr("transform", function (d) {
    /* istanbul ignore next */
    cov_24d5chq0nb().f[6]++;
    var _a =
      /* istanbul ignore next */
      (cov_24d5chq0nb().s[21]++, arcGenerator.centroid(d)),
      x =
      /* istanbul ignore next */
      (cov_24d5chq0nb().s[22]++, _a[0]),
      y =
      /* istanbul ignore next */
      (cov_24d5chq0nb().s[23]++, _a[1]);
    /* istanbul ignore next */
    cov_24d5chq0nb().s[24]++;
    return "translate(".concat(x, ", ").concat(y, ")");
  }).style("font-size", 0).transition().duration(700).style("font-size", "26px");
  // Add inner border
  /* istanbul ignore next */
  cov_24d5chq0nb().s[25]++;
  svg.append("circle").attr("cx", 0).attr("cy", 0).attr("r", 100) // should be same as innerRadius value
  .attr("fill", "transparent").transition().duration(700).attr("stroke-width", 8);
};
/* istanbul ignore next */
cov_24d5chq0nb().s[26]++;
exports.default = drawChart;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,