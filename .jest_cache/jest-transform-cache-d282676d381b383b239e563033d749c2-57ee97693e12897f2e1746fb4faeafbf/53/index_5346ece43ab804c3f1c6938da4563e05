629bdd92ddc00337fb09dded3680970c
"use strict";

/* istanbul ignore next */
function cov_10o3iduojc() {
  var path = "/home/user/React Projects/payment-reports-test-task-master-updated/payment-reports-test-task-master/src/components/Accordion/index.tsx";
  var hash = "c75ea4c00f020f91875c239208be210856c12d16";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/user/React Projects/payment-reports-test-task-master-updated/payment-reports-test-task-master/src/components/Accordion/index.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 15
        },
        end: {
          line: 12,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 10,
          column: 6
        }
      },
      "2": {
        start: {
          line: 4,
          column: 8
        },
        end: {
          line: 8,
          column: 9
        }
      },
      "3": {
        start: {
          line: 4,
          column: 24
        },
        end: {
          line: 4,
          column: 25
        }
      },
      "4": {
        start: {
          line: 4,
          column: 31
        },
        end: {
          line: 4,
          column: 47
        }
      },
      "5": {
        start: {
          line: 5,
          column: 12
        },
        end: {
          line: 5,
          column: 29
        }
      },
      "6": {
        start: {
          line: 6,
          column: 12
        },
        end: {
          line: 7,
          column: 28
        }
      },
      "7": {
        start: {
          line: 6,
          column: 29
        },
        end: {
          line: 7,
          column: 28
        }
      },
      "8": {
        start: {
          line: 7,
          column: 16
        },
        end: {
          line: 7,
          column: 28
        }
      },
      "9": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 17
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 43
        }
      },
      "11": {
        start: {
          line: 13,
          column: 22
        },
        end: {
          line: 15,
          column: 1
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "13": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 62
        }
      },
      "14": {
        start: {
          line: 17,
          column: 20
        },
        end: {
          line: 17,
          column: 48
        }
      },
      "15": {
        start: {
          line: 18,
          column: 18
        },
        end: {
          line: 18,
          column: 69
        }
      },
      "16": {
        start: {
          line: 19,
          column: 25
        },
        end: {
          line: 19,
          column: 83
        }
      },
      "17": {
        start: {
          line: 20,
          column: 25
        },
        end: {
          line: 20,
          column: 83
        }
      },
      "18": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "19": {
        start: {
          line: 23,
          column: 19
        },
        end: {
          line: 23,
          column: 30
        }
      },
      "20": {
        start: {
          line: 23,
          column: 44
        },
        end: {
          line: 23,
          column: 56
        }
      },
      "21": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 436
        }
      },
      "22": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 26,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 42
          },
          end: {
            line: 2,
            column: 43
          }
        },
        loc: {
          start: {
            line: 2,
            column: 54
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 3,
            column: 32
          },
          end: {
            line: 3,
            column: 33
          }
        },
        loc: {
          start: {
            line: 3,
            column: 44
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 13,
            column: 56
          },
          end: {
            line: 13,
            column: 57
          }
        },
        loc: {
          start: {
            line: 13,
            column: 71
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "3": {
        name: "SimpleAccordion",
        decl: {
          start: {
            line: 22,
            column: 9
          },
          end: {
            line: 22,
            column: 24
          }
        },
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 22
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 15
          },
          end: {
            line: 12,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 2,
            column: 20
          }
        }, {
          start: {
            line: 2,
            column: 24
          },
          end: {
            line: 2,
            column: 37
          }
        }, {
          start: {
            line: 2,
            column: 42
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 15
          },
          end: {
            line: 10,
            column: 5
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 15
          },
          end: {
            line: 3,
            column: 28
          }
        }, {
          start: {
            line: 3,
            column: 32
          },
          end: {
            line: 10,
            column: 5
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 6,
            column: 29
          },
          end: {
            line: 7,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 6,
            column: 29
          },
          end: {
            line: 7,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 6
      },
      "3": {
        loc: {
          start: {
            line: 13,
            column: 22
          },
          end: {
            line: 15,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 23
          },
          end: {
            line: 13,
            column: 27
          }
        }, {
          start: {
            line: 13,
            column: 31
          },
          end: {
            line: 13,
            column: 51
          }
        }, {
          start: {
            line: 13,
            column: 56
          },
          end: {
            line: 15,
            column: 1
          }
        }],
        line: 13
      },
      "4": {
        loc: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 14,
            column: 37
          },
          end: {
            line: 14,
            column: 40
          }
        }, {
          start: {
            line: 14,
            column: 43
          },
          end: {
            line: 14,
            column: 61
          }
        }],
        line: 14
      },
      "5": {
        loc: {
          start: {
            line: 14,
            column: 12
          },
          end: {
            line: 14,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 12
          },
          end: {
            line: 14,
            column: 15
          }
        }, {
          start: {
            line: 14,
            column: 19
          },
          end: {
            line: 14,
            column: 33
          }
        }],
        line: 14
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      file: "/home/user/React Projects/payment-reports-test-task-master-updated/payment-reports-test-task-master/src/components/Accordion/index.tsx",
      mappings: ";;;;;;;;;;;;;;;;;AACA,sEAAgD;AAChD,oFAA8D;AAC9D,oFAA8D;AAC9D,uBAAqB;AAOrB,SAAwB,eAAe,CAAC,EAGtB;QAFhB,QAAQ,cAAA,EACR,SAAS,eAAA;IAET,OAAO,CACL,2DACE,wBAAC,mBAAS,aAAC,SAAS,EAAC,gBAAgB,iBACnC,uBAAC,0BAAgB,8BAAe,iBAAiB,EAAC,EAAE,EAAC,gBAAgB,gBAClE,SAAS,YACO,EACnB,uBAAC,0BAAgB,cAAE,QAAQ,WAAoB,aACrC,WACX,CACJ,CAAC;AACJ,CAAC;AAdD,kCAcC",
      names: [],
      sources: ["/home/user/React Projects/payment-reports-test-task-master-updated/payment-reports-test-task-master/src/components/Accordion/index.tsx"],
      sourcesContent: ["import * as React from \"react\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport \"./style.css\";\n\ntype TAccrodionProps = {\n  children: JSX.Element;\n  Component: JSX.Element;\n};\n\nexport default function SimpleAccordion({\n  children,\n  Component,\n}: TAccrodionProps) {\n  return (\n    <>\n      <Accordion className=\"root-accordion\">\n        <AccordionSummary aria-controls=\"panel1a-content\" id=\"panel1a-header\">\n          {Component}\n        </AccordionSummary>\n        <AccordionDetails>{children}</AccordionDetails>\n      </Accordion>\n    </>\n  );\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c75ea4c00f020f91875c239208be210856c12d16"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_10o3iduojc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_10o3iduojc();
var __assign =
/* istanbul ignore next */
(cov_10o3iduojc().s[0]++,
/* istanbul ignore next */
(cov_10o3iduojc().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_10o3iduojc().b[0][1]++, this.__assign) ||
/* istanbul ignore next */
(cov_10o3iduojc().b[0][2]++, function () {
  /* istanbul ignore next */
  cov_10o3iduojc().f[0]++;
  cov_10o3iduojc().s[1]++;
  __assign =
  /* istanbul ignore next */
  (cov_10o3iduojc().b[1][0]++, Object.assign) ||
  /* istanbul ignore next */
  (cov_10o3iduojc().b[1][1]++, function (t) {
    /* istanbul ignore next */
    cov_10o3iduojc().f[1]++;
    cov_10o3iduojc().s[2]++;
    for (var s, i =
      /* istanbul ignore next */
      (cov_10o3iduojc().s[3]++, 1), n =
      /* istanbul ignore next */
      (cov_10o3iduojc().s[4]++, arguments.length); i < n; i++) {
      /* istanbul ignore next */
      cov_10o3iduojc().s[5]++;
      s = arguments[i];
      /* istanbul ignore next */
      cov_10o3iduojc().s[6]++;
      for (var p in s) {
        /* istanbul ignore next */
        cov_10o3iduojc().s[7]++;
        if (Object.prototype.hasOwnProperty.call(s, p)) {
          /* istanbul ignore next */
          cov_10o3iduojc().b[2][0]++;
          cov_10o3iduojc().s[8]++;
          t[p] = s[p];
        } else
        /* istanbul ignore next */
        {
          cov_10o3iduojc().b[2][1]++;
        }
      }
    }
    /* istanbul ignore next */
    cov_10o3iduojc().s[9]++;
    return t;
  });
  /* istanbul ignore next */
  cov_10o3iduojc().s[10]++;
  return __assign.apply(this, arguments);
}));
var __importDefault =
/* istanbul ignore next */
(cov_10o3iduojc().s[11]++,
/* istanbul ignore next */
(cov_10o3iduojc().b[3][0]++, this) &&
/* istanbul ignore next */
(cov_10o3iduojc().b[3][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_10o3iduojc().b[3][2]++, function (mod) {
  /* istanbul ignore next */
  cov_10o3iduojc().f[2]++;
  cov_10o3iduojc().s[12]++;
  return (
    /* istanbul ignore next */
    (cov_10o3iduojc().b[5][0]++, mod) &&
    /* istanbul ignore next */
    (cov_10o3iduojc().b[5][1]++, mod.__esModule) ?
    /* istanbul ignore next */
    (cov_10o3iduojc().b[4][0]++, mod) :
    /* istanbul ignore next */
    (cov_10o3iduojc().b[4][1]++, {
      "default": mod
    })
  );
}));
/* istanbul ignore next */
cov_10o3iduojc().s[13]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
var jsx_runtime_1 =
/* istanbul ignore next */
(cov_10o3iduojc().s[14]++, require("react/jsx-runtime"));
var Accordion_1 =
/* istanbul ignore next */
(cov_10o3iduojc().s[15]++, __importDefault(require("@mui/material/Accordion")));
var AccordionSummary_1 =
/* istanbul ignore next */
(cov_10o3iduojc().s[16]++, __importDefault(require("@mui/material/AccordionSummary")));
var AccordionDetails_1 =
/* istanbul ignore next */
(cov_10o3iduojc().s[17]++, __importDefault(require("@mui/material/AccordionDetails")));
/* istanbul ignore next */
cov_10o3iduojc().s[18]++;
require("./style.css");
function SimpleAccordion(_a) {
  /* istanbul ignore next */
  cov_10o3iduojc().f[3]++;
  var children =
    /* istanbul ignore next */
    (cov_10o3iduojc().s[19]++, _a.children),
    Component =
    /* istanbul ignore next */
    (cov_10o3iduojc().s[20]++, _a.Component);
  /* istanbul ignore next */
  cov_10o3iduojc().s[21]++;
  return (0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, {
    children: (0, jsx_runtime_1.jsxs)(Accordion_1.default, __assign({
      className: "root-accordion"
    }, {
      children: [(0, jsx_runtime_1.jsx)(AccordionSummary_1.default, __assign({
        "aria-controls": "panel1a-content",
        id: "panel1a-header"
      }, {
        children: Component
      }), void 0), (0, jsx_runtime_1.jsx)(AccordionDetails_1.default, {
        children: children
      }, void 0)]
    }), void 0)
  }, void 0);
}
/* istanbul ignore next */
cov_10o3iduojc().s[22]++;
exports.default = SimpleAccordion;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQThEO0FBQUE7QUFDOURBO0FBT0EsU0FBd0JDLGVBQWUsQ0FBQ0MsRUFHdEI7RUFBQTtFQUFBO01BRmhCQyxRQUFRO0lBQUE7SUFBQTtJQUNSQyxTQUFTO0lBQUE7SUFBQTtFQUFBO0VBQUE7RUFFVCxPQUNFO0lBQUFELFVBQ0Usd0JBQUNFLG1CQUFTO01BQUNDLFNBQVMsRUFBQztJQUFnQjtNQUFBSCxXQUNuQyx1QkFBQ0ksMEJBQWdCO1FBQUEsaUJBQWUsaUJBQWlCO1FBQUNDLEVBQUUsRUFBQztNQUFnQjtRQUFBTCxVQUNsRUM7TUFBUyxXQUNPLEVBQ25CLHVCQUFDSywwQkFBZ0I7UUFBQU4sVUFBRUE7TUFBUSxVQUFvQjtJQUFBO0VBQ3JDLFVBQ1g7QUFFUDtBQUFDO0FBQUE7QUFkRE8iLCJuYW1lcyI6WyJyZXF1aXJlIiwiU2ltcGxlQWNjb3JkaW9uIiwiX2EiLCJjaGlsZHJlbiIsIkNvbXBvbmVudCIsIkFjY29yZGlvbl8xIiwiY2xhc3NOYW1lIiwiQWNjb3JkaW9uU3VtbWFyeV8xIiwiaWQiLCJBY2NvcmRpb25EZXRhaWxzXzEiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiL2hvbWUvdXNlci9SZWFjdCBQcm9qZWN0cy9wYXltZW50LXJlcG9ydHMtdGVzdC10YXNrLW1hc3Rlci11cGRhdGVkL3BheW1lbnQtcmVwb3J0cy10ZXN0LXRhc2stbWFzdGVyL3NyYy9jb21wb25lbnRzL0FjY29yZGlvbi9pbmRleC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgQWNjb3JkaW9uIGZyb20gXCJAbXVpL21hdGVyaWFsL0FjY29yZGlvblwiO1xuaW1wb3J0IEFjY29yZGlvblN1bW1hcnkgZnJvbSBcIkBtdWkvbWF0ZXJpYWwvQWNjb3JkaW9uU3VtbWFyeVwiO1xuaW1wb3J0IEFjY29yZGlvbkRldGFpbHMgZnJvbSBcIkBtdWkvbWF0ZXJpYWwvQWNjb3JkaW9uRGV0YWlsc1wiO1xuaW1wb3J0IFwiLi9zdHlsZS5jc3NcIjtcblxudHlwZSBUQWNjcm9kaW9uUHJvcHMgPSB7XG4gIGNoaWxkcmVuOiBKU1guRWxlbWVudDtcbiAgQ29tcG9uZW50OiBKU1guRWxlbWVudDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFNpbXBsZUFjY29yZGlvbih7XG4gIGNoaWxkcmVuLFxuICBDb21wb25lbnQsXG59OiBUQWNjcm9kaW9uUHJvcHMpIHtcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPEFjY29yZGlvbiBjbGFzc05hbWU9XCJyb290LWFjY29yZGlvblwiPlxuICAgICAgICA8QWNjb3JkaW9uU3VtbWFyeSBhcmlhLWNvbnRyb2xzPVwicGFuZWwxYS1jb250ZW50XCIgaWQ9XCJwYW5lbDFhLWhlYWRlclwiPlxuICAgICAgICAgIHtDb21wb25lbnR9XG4gICAgICAgIDwvQWNjb3JkaW9uU3VtbWFyeT5cbiAgICAgICAgPEFjY29yZGlvbkRldGFpbHM+e2NoaWxkcmVufTwvQWNjb3JkaW9uRGV0YWlscz5cbiAgICAgIDwvQWNjb3JkaW9uPlxuICAgIDwvPlxuICApO1xufVxuIl19