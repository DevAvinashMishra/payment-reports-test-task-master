{"file":"/home/user/React Projects/payment-reports-test-task-master-updated/payment-reports-test-task-master/src/page/Report/index.tsx","mappings":"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","names":[],"sources":["/home/user/React Projects/payment-reports-test-task-master-updated/payment-reports-test-task-master/src/page/Report/index.tsx"],"sourcesContent":["import React from \"react\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Grid from \"@mui/material/Grid\";\nimport SimpleTable from \"components/SimpleTable\";\nimport Select from \"components/Select\";\nimport DateSelector from \"components/Date\";\nimport ChartComponent from \"components/DonutChart\";\nimport CustomAccordion from \"components/Accordion\";\nimport CustomisedTableRow from \"components/Accordion/AccordionSummary\";\nimport AccordionFooter from \"components/Accordion/AccordionFooter\";\nimport DonutHead from \"components/DonutChart/donutHead\";\nimport AccordionHeader from \"components/Accordion/AccordionHeader\";\nimport { totalsGenerator } from \"util/helper\";\nimport useReportController from \"./useReportController\";\nimport { ItemType } from \"./type\";\nimport { report } from \"util/constants\";\n\nconst Report = () => {\n  const {\n    isLoading,\n    formatProjectData,\n    projectValue,\n    gatewayLoading,\n    formatGatewayData,\n    gateWayValue,\n    displayGateway,\n    tableHead,\n    accordionData,\n    donutChart,\n    projectData,\n    gatewayData,\n    grandTotal,\n    selectGateway,\n    selectFromDate,\n    selectToDate,\n    handleReport,\n    selectProject,\n  } = useReportController();\n  return (\n    <>\n      <div className=\"tableMainContent\">\n        <div className=\"tableContent\">\n          <Typography\n            variant=\"h5\"\n            component=\"h2\"\n            sx={{ marginRight: \"15rem\", fontSize: 24, fontWeight: 700, color: '#011F4B' }}\n          >\n            {report.REPORTS}\n          </Typography>\n          <Box component=\"span\" sx={{ display: \"block\", fontSize: 16, fontWeight: 700, color: '#7E8299' }}>\n            {report.EAISLY_GENRETAE_REPORT}\n          </Box>\n        </div>\n        {isLoading ? (\n          <CircularProgress disableShrink />\n        ) : (\n          formatProjectData && (\n            <Select\n              initialLabel={report.ALL_PROJECTS}\n              selectData={formatProjectData}\n              handleChange={selectProject}\n              value={projectValue}\n            />\n          )\n        )}\n\n        {gatewayLoading ? (\n          <CircularProgress disableShrink />\n        ) : (\n          formatGatewayData && (\n            <Select\n              initialLabel={report.ALL_GATEWAYS}\n              selectData={formatGatewayData}\n              handleChange={selectGateway}\n              value={gateWayValue}\n            />\n          )\n        )}\n        <DateSelector initialLabel={report.FROM_DATE} handleChange={selectFromDate} />\n        <DateSelector initialLabel={report.TO_DATE} handleChange={selectToDate} />\n        <Button variant=\"contained\" disableElevation onClick={handleReport}>\n          {report.GENERATE_REPORT}\n        </Button>\n      </div>\n      <Grid container sx={{ marginTop: \"2rem\" }}>\n        <Grid\n          item\n          xs={12}\n          md={displayGateway ? 6 : 12}\n          sx={{ backgroundColor: \"aliceblue\", borderRadius: \"12px\" }}\n        >\n          <AccordionHeader header={tableHead} />\n          {accordionData === null ? (\n            <CircularProgress disableShrink />\n          ) : (\n            accordionData &&\n            accordionData.map((item: ItemType) =>\n              projectData !== null && gatewayData !== null ? (\n                <SimpleTable rows={item.data} />\n              ) : (\n                <CustomAccordion\n                  Component={\n                    <CustomisedTableRow\n                      grandTotalPayment={totalsGenerator(item.data)}\n                      projectName={item.projectName}\n                    />\n                  }\n                  key={`accordion-${Math.random()}`}\n                >\n                  <SimpleTable rows={item.data} />\n                </CustomAccordion>\n              )\n            )\n          )}\n        </Grid>\n\n        {displayGateway ? (\n          <Grid item xs={12} md={6}>\n            <DonutHead data={donutChart} />\n            <ChartComponent data={donutChart} />\n            <AccordionFooter value={`${report.GATEWAY_TOTAL} : ${grandTotal} ${report.USD}`} />\n          </Grid>\n        ) : (\n          \"\"\n        )}\n        {displayGateway ? null : (\n          <AccordionFooter value={`${report.TOTAL} : ${grandTotal} ${report.USD}`} />\n        )}\n      </Grid>\n    </>\n  );\n};\n\nexport default Report;\n"],"version":3}