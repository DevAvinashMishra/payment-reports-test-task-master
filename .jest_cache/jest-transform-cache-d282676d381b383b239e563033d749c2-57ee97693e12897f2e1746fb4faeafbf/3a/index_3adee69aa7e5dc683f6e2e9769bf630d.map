{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAA8D;AAAA;AAC9DA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAwC;AAAA;AAExC,IAAMC,MAAM,GAAG;EAAA;EAAA;EACP;IAAA;IAAA,2BAmBF,iCAAmB,GAAE;IAlBvBC,SAAS;IAAA;IAAA;IACTC,iBAAiB;IAAA;IAAA;IACjBC,YAAY;IAAA;IAAA;IACZC,cAAc;IAAA;IAAA;IACdC,iBAAiB;IAAA;IAAA;IACjBC,YAAY;IAAA;IAAA;IACZC,cAAc;IAAA;IAAA;IACdC,SAAS;IAAA;IAAA;IACTC,aAAa;IAAA;IAAA;IACbC,UAAU;IAAA;IAAA;IACVC,WAAW;IAAA;IAAA;IACXC,WAAW;IAAA;IAAA;IACXC,UAAU;IAAA;IAAA;IACVC,aAAa;IAAA;IAAA;IACbC,cAAc;IAAA;IAAA;IACdC,YAAY;IAAA;IAAA;IACZC,YAAY;IAAA;IAAA;IACZC,aAAa;IAAA;IAAA,2CACU;EAAC;EAAA;EAC1B,OACE;IAAAC,WACE;MAAKC,SAAS,EAAC;IAAkB;MAAAD,WAC/B;QAAKC,SAAS,EAAC;MAAc;QAAAD,WAC3B,uBAACE,oBAAU;UACTC,OAAO,EAAC,IAAI;UACZC,SAAS,EAAC,IAAI;UACdC,EAAE,EAAE;YAAEC,WAAW,EAAE,OAAO;YAAEC,QAAQ,EAAE,EAAE;YAAEC,UAAU,EAAE,GAAG;YAAEC,KAAK,EAAE;UAAS;QAAE;UAAAT,UAE5EU,kBAAM,CAACC;QAAO,WACJ,EACb,uBAACC,aAAG;UAACR,SAAS,EAAC,MAAM;UAACC,EAAE,EAAE;YAAEQ,OAAO,EAAE,OAAO;YAAEN,QAAQ,EAAE,EAAE;YAAEC,UAAU,EAAE,GAAG;YAAEC,KAAK,EAAE;UAAS;QAAE;UAAAT,UAC5FU,kBAAM,CAACI;QAAsB,WAC1B;MAAA,WACF,EACLhC,SAAS;MAAA;MAAA,6BACR,uBAACiC,0BAAgB;QAACC,aAAa;MAAA,UAAG;MAAA;MAAA;MAElC;MAAA,8CAAiB;MAAA;MAAA,6BACf,uBAACC,gBAAM;QACLC,YAAY,EAAER,kBAAM,CAACS,YAAY;QACjCC,UAAU,EAAErC,iBAAiB;QAC7BsC,YAAY,EAAEtB,aAAa;QAC3BuB,KAAK,EAAEtC;MAAY,UACnB,CACH,CACF,EAEAC,cAAc;MAAA;MAAA,6BACb,uBAAC8B,0BAAgB;QAACC,aAAa;MAAA,UAAG;MAAA;MAAA;MAElC;MAAA,8CAAiB;MAAA;MAAA,6BACf,uBAACC,gBAAM;QACLC,YAAY,EAAER,kBAAM,CAACa,YAAY;QACjCH,UAAU,EAAElC,iBAAiB;QAC7BmC,YAAY,EAAE1B,aAAa;QAC3B2B,KAAK,EAAEnC;MAAY,UACnB,CACH,CACF,EACD,uBAACqC,cAAY;QAACN,YAAY,EAAER,kBAAM,CAACe,SAAS;QAAEJ,YAAY,EAAEzB;MAAc,UAAI,EAC9E,uBAAC4B,cAAY;QAACN,YAAY,EAAER,kBAAM,CAACgB,OAAO;QAAEL,YAAY,EAAExB;MAAY,UAAI,EAC1E,uBAAC8B,gBAAM;QAACxB,OAAO,EAAC,WAAW;QAACyB,gBAAgB;QAACC,OAAO,EAAE/B;MAAY;QAAAE,UAC/DU,kBAAM,CAACoB;MAAe,WAChB;IAAA,WACL,EACN,wBAACC,cAAI;MAACC,SAAS;MAAC3B,EAAE,EAAE;QAAE4B,SAAS,EAAE;MAAM;IAAE;MAAAjC,WACvC,wBAAC+B,cAAI;QACHG,IAAI;QACJC,EAAE,EAAE,EAAE;QACNC,EAAE,EAAEhD,cAAc;QAAA;QAAA,8BAAG,CAAC;QAAA;QAAA,8BAAG,EAAE;QAC3BiB,EAAE,EAAE;UAAEgC,eAAe,EAAE,WAAW;UAAEC,YAAY,EAAE;QAAM;MAAE;QAAAtC,WAE1D,uBAACuC,yBAAe;UAACC,MAAM,EAAEnD;QAAS,UAAI,EACrCC,aAAa,KAAK,IAAI;QAAA;QAAA,8BACrB,uBAACyB,0BAAgB;UAACC,aAAa;QAAA,UAAG;QAAA;QAAA;QAElC;QAAA,2CAAa;QAAA;QAAA,8BACb1B,aAAa,CAACmD,GAAG,CAAC,UAACP,IAAc;UAAA;UAAA;UAAA;UAC/B;YAAA;YAAA,yCAAW,KAAK,IAAI;YAAA;YAAA,8BAAIzC,WAAW,KAAK,IAAI;YAAA;YAAA,8BAC1C,uBAACiD,qBAAW;cAACC,IAAI,EAAET,IAAI,CAACU;YAAI,UAAI;YAAA;YAAA,8BAEhC,uBAACC,mBAAe;cACdC,SAAS,EACP,uBAACC,0BAAkB;gBACjBC,iBAAiB,EAAE,4BAAe,EAACd,IAAI,CAACU,IAAI,CAAC;gBAC7CK,WAAW,EAAEf,IAAI,CAACe;cAAW;YAC7B;cAAAjD,UAIJ,uBAAC0C,qBAAW;gBAACC,IAAI,EAAET,IAAI,CAACU;cAAI;YAAI,IAF3B,oBAAaM,IAAI,CAACC,MAAM,EAAE,CAAE,CAGjB;UACnB;QAdD,CAcC,CACF,EACF;MAAA,WACI,EAEN/D,cAAc;MAAA;MAAA,8BACb,wBAAC2C,cAAI;QAACG,IAAI;QAACC,EAAE,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAC;QAAApC,WACtB,uBAACoD,mBAAS;UAACR,IAAI,EAAErD;QAAU,UAAI,EAC/B,uBAAC8D,oBAAc;UAACT,IAAI,EAAErD;QAAU,UAAI,EACpC,uBAAC+D,yBAAe;UAAChC,KAAK,EAAE,UAAGZ,kBAAM,CAAC6C,aAAa,gBAAM7D,UAAU,cAAIgB,kBAAM,CAAC8C,GAAG;QAAE,UAAI;MAAA,WAC9E;MAAA;MAAA,8BAEP,EAAE,CACH,EACApE,cAAc;MAAA;MAAA,8BAAG,IAAI;MAAA;MAAA,8BACpB,uBAACkE,yBAAe;QAAChC,KAAK,EAAE,UAAGZ,kBAAM,CAAC+C,KAAK,gBAAM/D,UAAU,cAAIgB,kBAAM,CAAC8C,GAAG;MAAE,UAAI,CAC5E;IAAA,WACI;EAAA,UACN;AAEP,CAAC;AAAC;AAAA;AAEFE,kBAAe7E,MAAM","names":["require","Report","isLoading","formatProjectData","projectValue","gatewayLoading","formatGatewayData","gateWayValue","displayGateway","tableHead","accordionData","donutChart","projectData","gatewayData","grandTotal","selectGateway","selectFromDate","selectToDate","handleReport","selectProject","children","className","Typography_1","variant","component","sx","marginRight","fontSize","fontWeight","color","constants_1","REPORTS","Box_1","display","EAISLY_GENRETAE_REPORT","CircularProgress_1","disableShrink","Select_1","initialLabel","ALL_PROJECTS","selectData","handleChange","value","ALL_GATEWAYS","Date_1","FROM_DATE","TO_DATE","Button_1","disableElevation","onClick","GENERATE_REPORT","Grid_1","container","marginTop","item","xs","md","backgroundColor","borderRadius","AccordionHeader_1","header","map","SimpleTable_1","rows","data","Accordion_1","Component","AccordionSummary_1","grandTotalPayment","projectName","Math","random","donutHead_1","DonutChart_1","AccordionFooter_1","GATEWAY_TOTAL","USD","TOTAL","exports"],"sources":["/home/user/React Projects/payment-reports-test-task-master-updated/payment-reports-test-task-master/src/page/Report/index.tsx"],"sourcesContent":["import React from \"react\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Grid from \"@mui/material/Grid\";\nimport SimpleTable from \"../../components/SimpleTable\";\nimport Select from \"../../components/Select\";\nimport DateSelector from \"../../components/Date\";\nimport ChartComponent from \"../../components/DonutChart\";\nimport CustomAccordion from \"../../components/Accordion\";\nimport CustomisedTableRow from \"../../components/Accordion/AccordionSummary\";\nimport AccordionFooter from \"../../components/Accordion/AccordionFooter\";\nimport DonutHead from \"../../components/DonutChart/donutHead\";\nimport AccordionHeader from \"../../components/Accordion/AccordionHeader\";\nimport { totalsGenerator } from \"util/helper\";\nimport useReportController from \"./useReportController\";\nimport { ItemType } from \"./type\";\nimport { report } from \"util/constants\";\n\nconst Report = () => {\n  const {\n    isLoading,\n    formatProjectData,\n    projectValue,\n    gatewayLoading,\n    formatGatewayData,\n    gateWayValue,\n    displayGateway,\n    tableHead,\n    accordionData,\n    donutChart,\n    projectData,\n    gatewayData,\n    grandTotal,\n    selectGateway,\n    selectFromDate,\n    selectToDate,\n    handleReport,\n    selectProject,\n  } = useReportController();\n  return (\n    <>\n      <div className=\"tableMainContent\">\n        <div className=\"tableContent\">\n          <Typography\n            variant=\"h5\"\n            component=\"h2\"\n            sx={{ marginRight: \"15rem\", fontSize: 24, fontWeight: 700, color: '#011F4B' }}\n          >\n            {report.REPORTS}\n          </Typography>\n          <Box component=\"span\" sx={{ display: \"block\", fontSize: 16, fontWeight: 700, color: '#7E8299' }}>\n            {report.EAISLY_GENRETAE_REPORT}\n          </Box>\n        </div>\n        {isLoading ? (\n          <CircularProgress disableShrink />\n        ) : (\n          formatProjectData && (\n            <Select\n              initialLabel={report.ALL_PROJECTS}\n              selectData={formatProjectData}\n              handleChange={selectProject}\n              value={projectValue}\n            />\n          )\n        )}\n\n        {gatewayLoading ? (\n          <CircularProgress disableShrink />\n        ) : (\n          formatGatewayData && (\n            <Select\n              initialLabel={report.ALL_GATEWAYS}\n              selectData={formatGatewayData}\n              handleChange={selectGateway}\n              value={gateWayValue}\n            />\n          )\n        )}\n        <DateSelector initialLabel={report.FROM_DATE} handleChange={selectFromDate} />\n        <DateSelector initialLabel={report.TO_DATE} handleChange={selectToDate} />\n        <Button variant=\"contained\" disableElevation onClick={handleReport}>\n          {report.GENERATE_REPORT}\n        </Button>\n      </div>\n      <Grid container sx={{ marginTop: \"2rem\" }}>\n        <Grid\n          item\n          xs={12}\n          md={displayGateway ? 6 : 12}\n          sx={{ backgroundColor: \"aliceblue\", borderRadius: \"12px\" }}\n        >\n          <AccordionHeader header={tableHead} />\n          {accordionData === null ? (\n            <CircularProgress disableShrink />\n          ) : (\n            accordionData &&\n            accordionData.map((item: ItemType) =>\n              projectData !== null && gatewayData !== null ? (\n                <SimpleTable rows={item.data} />\n              ) : (\n                <CustomAccordion\n                  Component={\n                    <CustomisedTableRow\n                      grandTotalPayment={totalsGenerator(item.data)}\n                      projectName={item.projectName}\n                    />\n                  }\n                  key={`accordion-${Math.random()}`}\n                >\n                  <SimpleTable rows={item.data} />\n                </CustomAccordion>\n              )\n            )\n          )}\n        </Grid>\n\n        {displayGateway ? (\n          <Grid item xs={12} md={6}>\n            <DonutHead data={donutChart} />\n            <ChartComponent data={donutChart} />\n            <AccordionFooter value={`${report.GATEWAY_TOTAL} : ${grandTotal} ${report.USD}`} />\n          </Grid>\n        ) : (\n          \"\"\n        )}\n        {displayGateway ? null : (\n          <AccordionFooter value={`${report.TOTAL} : ${grandTotal} ${report.USD}`} />\n        )}\n      </Grid>\n    </>\n  );\n};\n\nexport default Report;\n"]}