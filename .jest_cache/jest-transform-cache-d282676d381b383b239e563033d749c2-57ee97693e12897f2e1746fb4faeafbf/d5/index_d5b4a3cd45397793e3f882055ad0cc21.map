{"version":3,"mappingscA,IAAMA,YAAY;AAAA;AAAA,0BAAGC,KAAK,CAACC,UAAU,CAAC,SAASF,YAAY,CACzDG,KAAkC;EAAA;EAAA;EAElC,IAAMC,UAAU;EAAA;EAAA;IACdC,IAAI,EAAEC,0BAAY;IAClBC,OAAO,EAAED;EAAa,GACnBH,KAAK,CAACC,UAAU,CACpB;EAAC;EAAA;EAEF,OAAO,uBAACI,qBAAc,eAAKL,KAAK;IAAEC,UAAU,EAAEA;EAAU,WAAI;AAC9D,CAAC,CAEe;AAAC;AAAA;AAEjB,IAAMK,MAAM,GAAG,UAACC,EAKH;EAAA;EAAA;MAJXC,YAAY;IAAA;IAAA;IACZC,UAAU;IAAA;IAAA;IACVC,YAAY;IAAA;IAAA;IACZC,KAAK;IAAA;IAAA;EAAA;EAAA;EAEL,OACE,wBAACd,YAAY;IAACe,YAAY,EAAE,IAAI;IAAEC,QAAQ,EAAEH,YAAY;IAAEC,KAAK,EAAEA;EAAK;IAAAG,WACpE,uBAACX,0BAAY;MAACQ,KAAK,EAAE;IAAI;MAAAG,UAAGN;IAAY,WAAgB,EACvDC,UAAU,CAACM,GAAG,CAAC,UAACR,EAAqB;MAAA;MAAA;UAAnBS,IAAI;QAAA;QAAA;QAAEC,EAAE;QAAA;QAAA;MAAA;MAAA;MAAgB,OACzC,uBAACd,0BAAY;QAACQ,KAAK,EAAEM;MAAE;QAAAH,UACpBE;MAAI,IADuBC,EAAE,CAEjB;IAH0B,CAI1C,CAAC;EAAA,WACW;AAEnB,CAAC;AAAC;AAAA;AAEFC,kBAAeZ,MAAM","names":["CustomSelect","React","forwardRef","props","components","Root","selectStyle_1","Listbox","base_1","Select","_a","initialLabel","selectData","handleChange","value","defaultValue","onChange","children","map","name","id","exports"],"sources":["/home/user/React Projects/payment-reports-test-task-master-updated/payment-reports-test-task-master/src/components/Select/index.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/ban-types */\nimport * as React from \"react\";\nimport {\n  SelectUnstyled,\n  SelectUnstyledProps,\n} from \"@mui/base/\";\nimport { StyledButton, StyledListbox, StyledOption } from './selectStyle'\n\ntype SelectType = {\n  initialLabel: string;\n  selectData: mapType[];\n  handleChange: (e: HTMLInputElement | null) => void;\n  value: HTMLInputElement | null | undefined;\n};\ntype mapType = {\n  name: string;\n  id: string;\n  type: string;\n};\n\nconst CustomSelect = React.forwardRef(function CustomSelect<TValue extends {}>(\n  props: SelectUnstyledProps<TValue>\n) {\n  const components: SelectUnstyledProps<TValue>[\"components\"] = {\n    Root: StyledButton,\n    Listbox: StyledListbox,\n    ...props.components,\n  };\n\n  return <SelectUnstyled {...props} components={components} />;\n}) as <TValue extends {}>(\n  props: SelectUnstyledProps<TValue> & React.RefAttributes<HTMLUListElement>\n) => JSX.Element;\n\nconst Select = ({\n  initialLabel,\n  selectData,\n  handleChange,\n  value,\n}: SelectType) => {\n  return (\n    <CustomSelect defaultValue={null} onChange={handleChange} value={value} >\n      <StyledOption value={null}>{initialLabel}</StyledOption>\n      {selectData.map(({ name, id }: mapType) => (\n        <StyledOption value={id} key={id}>\n          {name}\n        </StyledOption>\n      ))}\n    </CustomSelect>\n  );\n};\n\nexport default Select;"]}