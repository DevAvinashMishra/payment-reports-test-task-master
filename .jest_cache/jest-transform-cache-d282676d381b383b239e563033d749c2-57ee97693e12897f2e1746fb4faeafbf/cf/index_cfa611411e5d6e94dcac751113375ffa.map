{"version":3,"mappingswBC,YAAY,CAACC,EAAwC;EAAA;EAAA;MAAtCC,YAAY;IAAA;IAAA;IAAEC,YAAY;IAAA;IAAA;EACzD;IAAA;IAAA,0BAAoBC,KAAK,CAACC,QAAQ,CAAc,IAAI,CAAC;IAApDC,KAAK;IAAA;IAAA;IAAEC,QAAQ;IAAA;IAAA,+BAAqC;EAAC;EAAA;EAC5D,IAAMC,gBAAgB,GAAG,UAACC,MAAmB;IAAA;IAAA;IAAA;IAC3CN,YAAY,CAACM,MAAqB,CAAC;EACrC,CAAC;EAAC;EAAA;EAEF,OACE,uBAACC,8BAAoB;IACnBC,WAAW,EAAEC,wBAAc;IAC3BC,QAAQ,EAAEL,gBAAgB,CAACF,KAAK,CAAC;IACjCQ,EAAE,EAAE;MAACC,MAAM,EAAC;IAAM;EAAC;IAAAC,UAEnB,uBAACC,oBAAU;MACTC,KAAK,EAAEhB,YAAY;MACnBI,KAAK,EAAEA,KAAK;MACZO,QAAQ,EAAE,UAACM,QAAQ;QAAA;QAAA;QAAA;QACjBZ,QAAQ,CAACY,QAAQ,CAAC;MACpB,CAAC;MACDC,WAAW,EAAE,UAACC,MAAM;QAAA;QAAA;;;;QAAK,OACvB,uBAACC,mBAAS,eAAKD,MAAM;UAAEE,UAAU;UAAE;UAAA;UAAA;UAAA,mCAAM;UAAA;UAAA,6BAANF,MAAM;UAAA;UAAA;UAAA;UAAA,6BAANA,MAAM,CAAEG,UAAU;UAAA;UAAA;UAAA;UAAA;UAAA;UAAA,gCAAEC,WAAW;QAAA,WAAI;;IACvE;EACD,WACmB;AAE3B;AAAC;AAAA;AAxBDC","names":["require","DateSelector","_a","initialLabel","handleChange","React","useState","value","setValue","handleChangeDate","target","LocalizationProvider_1","dateAdapter","AdapterDateFns_1","onChange","sx","border","children","DatePicker_1","label","newValue","renderInput","params","TextField_1","helperText","inputProps","placeholder","exports"],"sources":["/home/user/React Projects/payment-reports-test-task-master-updated/payment-reports-test-task-master/src/components/Date/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DatePicker from \"@mui/lab/DatePicker\";\nimport { TDateTarget } from \"types\";\nimport \"./style.css\";\n\ntype DateType = {\n  initialLabel: string;\n  handleChange: (e: TDateTarget) => void;\n};\n\nexport default function DateSelector({ initialLabel, handleChange }: DateType) {\n  const [value, setValue] = React.useState<Date | null>(null);\n  const handleChangeDate = (target: Date | null) => {\n    handleChange(target as TDateTarget);\n  };\n\n  return (\n    <LocalizationProvider\n      dateAdapter={AdapterDateFns}\n      onChange={handleChangeDate(value)}\n      sx={{border:'none'}}\n    >\n      <DatePicker\n        label={initialLabel}\n        value={value}\n        onChange={(newValue) => {\n          setValue(newValue);\n        }}\n        renderInput={(params) => (\n          <TextField {...params} helperText={params?.inputProps?.placeholder} />\n        )}\n      />\n    </LocalizationProvider>\n  );\n}\n"]}