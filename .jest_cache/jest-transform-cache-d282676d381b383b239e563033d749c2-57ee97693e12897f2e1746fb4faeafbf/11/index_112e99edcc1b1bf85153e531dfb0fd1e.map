{"file":"/home/user/React Projects/payment-reports-test-task-master-updated/payment-reports-test-task-master/src/components/Select/index.tsx","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,iDAAiD;AACjD,2CAA+B;AAC/B,mCAGoB;AACpB,6CAAyE;AAczE,IAAM,YAAY,GAAG,KAAK,CAAC,UAAU,CAAC,SAAS,YAAY,CACzD,KAAkC;IAElC,IAAM,UAAU,cACd,IAAI,EAAE,0BAAY,EAClB,OAAO,EAAE,2BAAa,IACnB,KAAK,CAAC,UAAU,CACpB,CAAC;IAEF,OAAO,uBAAC,qBAAc,eAAK,KAAK,IAAE,UAAU,EAAE,UAAU,YAAI,CAAC;AAC/D,CAAC,CAEe,CAAC;AAEjB,IAAM,MAAM,GAAG,UAAC,EAKH;QAJX,YAAY,kBAAA,EACZ,UAAU,gBAAA,EACV,YAAY,kBAAA,EACZ,KAAK,WAAA;IAEL,OAAO,CACL,wBAAC,YAAY,aAAC,YAAY,EAAE,IAAI,EAAE,QAAQ,EAAE,YAAY,EAAE,KAAK,EAAE,KAAK,iBACpE,uBAAC,0BAAY,aAAC,KAAK,EAAE,IAAI,gBAAG,YAAY,YAAgB,EACvD,UAAU,CAAC,GAAG,CAAC,UAAC,EAAqB;oBAAnB,IAAI,UAAA,EAAE,EAAE,QAAA;gBAAgB,OAAA,CACzC,uBAAC,0BAAY,aAAC,KAAK,EAAE,EAAE,gBACpB,IAAI,KADuB,EAAE,CAEjB,CAChB;YAJ0C,CAI1C,CAAC,aACW,CAChB,CAAC;AACJ,CAAC,CAAC;AAEF,kBAAe,MAAM,CAAC","names":[],"sources":["/home/user/React Projects/payment-reports-test-task-master-updated/payment-reports-test-task-master/src/components/Select/index.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/ban-types */\nimport * as React from \"react\";\nimport {\n  SelectUnstyled,\n  SelectUnstyledProps,\n} from \"@mui/base/\";\nimport { StyledButton, StyledListbox, StyledOption } from './selectStyle'\n\ntype SelectType = {\n  initialLabel: string;\n  selectData: mapType[];\n  handleChange: (e: HTMLInputElement | null) => void;\n  value: HTMLInputElement | null | undefined;\n};\ntype mapType = {\n  name: string;\n  id: string;\n  type: string;\n};\n\nconst CustomSelect = React.forwardRef(function CustomSelect<TValue extends {}>(\n  props: SelectUnstyledProps<TValue>\n) {\n  const components: SelectUnstyledProps<TValue>[\"components\"] = {\n    Root: StyledButton,\n    Listbox: StyledListbox,\n    ...props.components,\n  };\n\n  return <SelectUnstyled {...props} components={components} />;\n}) as <TValue extends {}>(\n  props: SelectUnstyledProps<TValue> & React.RefAttributes<HTMLUListElement>\n) => JSX.Element;\n\nconst Select = ({\n  initialLabel,\n  selectData,\n  handleChange,\n  value,\n}: SelectType) => {\n  return (\n    <CustomSelect defaultValue={null} onChange={handleChange} value={value} >\n      <StyledOption value={null}>{initialLabel}</StyledOption>\n      {selectData.map(({ name, id }: mapType) => (\n        <StyledOption value={id} key={id}>\n          {name}\n        </StyledOption>\n      ))}\n    </CustomSelect>\n  );\n};\n\nexport default Select;"],"version":3}