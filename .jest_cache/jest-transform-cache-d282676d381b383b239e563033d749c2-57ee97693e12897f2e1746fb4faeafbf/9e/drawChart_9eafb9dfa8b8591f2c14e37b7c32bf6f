50471925ad0be726be700a6ded1dfbf9
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var d3_1 = require("d3");
var helper_1 = require("util/helper");
var constants_1 = require("util/constants");
var drawChart = function (element, data) {
    var total = (0, helper_1.totalDonutValue)(data);
    var boxSize = 500;
    (0, d3_1.select)(element).select("svg").remove();
    var svg = (0, d3_1.select)(element)
        .append("svg")
        .attr("preserveAspectRatio", "xMidYMid meet")
        .attr("height", "100%")
        .attr("width", "100%")
        .attr("viewBox", "0 0 ".concat(boxSize, " ").concat(boxSize))
        .append("g")
        .attr("transform", "translate(".concat(boxSize / 2, ", ").concat(boxSize / 2, ")"));
    var arcGenerator = (0, d3_1.arc)()
        .padAngle(0.02)
        .innerRadius(100)
        .outerRadius(250);
    var pieGenerator = (0, d3_1.pie)()
        .startAngle(-0.75 * Math.PI)
        .value(function (d) { return d.value; });
    var arcs = svg
        .selectAll()
        .data(pieGenerator(data))
        .enter();
    arcs
        .append("path")
        .attr("d", arcGenerator)
        .style("fill", function (d, i) { return constants_1.colors[i % data.length]; })
        .transition()
        .duration(700)
        .attrTween("d", function (d) {
        var i = (0, d3_1.interpolate)(d.startAngle, d.endAngle);
        return function (t) {
            d.endAngle = i(t);
            return arcGenerator(d);
        };
    });
    arcs
        .append("text")
        .attr("text-anchor", "middle")
        .text(function (d) { return "".concat((0, helper_1.calculatePercentage)(total, d.data.value), "%"); }) // label text
        .style("fill", "#fff") // label color
        .style("font-size", "30px") // label size
        .attr("transform", function (d) {
        var _a = arcGenerator.centroid(d), x = _a[0], y = _a[1];
        return "translate(".concat(x, ", ").concat(y, ")");
    })
        .style("font-size", 0)
        .transition()
        .duration(700)
        .style("font-size", "26px");
    // Add inner border
    svg
        .append("circle")
        .attr("cx", 0)
        .attr("cy", 0)
        .attr("r", 100) // should be same as innerRadius value
        .attr("fill", "transparent")
        .transition()
        .duration(700)
        .attr("stroke-width", 8);
};
exports.default = drawChart;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL2hvbWUvdXNlci9SZWFjdCBQcm9qZWN0cy9wYXltZW50LXJlcG9ydHMtdGVzdC10YXNrLW1hc3Rlci11cGRhdGVkL3BheW1lbnQtcmVwb3J0cy10ZXN0LXRhc2stbWFzdGVyL3NyYy9jb21wb25lbnRzL0RvbnV0Q2hhcnQvZHJhd0NoYXJ0LnRzIiwibWFwcGluZ3MiOiI7O0FBQUEseUJBQW1EO0FBQ25ELHNDQUFtRTtBQUVuRSw0Q0FBd0M7QUFHeEMsSUFBTSxTQUFTLEdBQUcsVUFBQyxPQUFlLEVBQUUsSUFBd0I7SUFDMUQsSUFBTSxLQUFLLEdBQUcsSUFBQSx3QkFBZSxFQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3BDLElBQU0sT0FBTyxHQUFHLEdBQUcsQ0FBQztJQUVwQixJQUFBLFdBQU0sRUFBQyxPQUFPLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDdkMsSUFBTSxHQUFHLEdBQUcsSUFBQSxXQUFNLEVBQUMsT0FBTyxDQUFDO1NBQ3hCLE1BQU0sQ0FBQyxLQUFLLENBQUM7U0FDYixJQUFJLENBQUMscUJBQXFCLEVBQUUsZUFBZSxDQUFDO1NBQzVDLElBQUksQ0FBQyxRQUFRLEVBQUUsTUFBTSxDQUFDO1NBQ3RCLElBQUksQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDO1NBQ3JCLElBQUksQ0FBQyxTQUFTLEVBQUUsY0FBTyxPQUFPLGNBQUksT0FBTyxDQUFFLENBQUM7U0FDNUMsTUFBTSxDQUFDLEdBQUcsQ0FBQztTQUNYLElBQUksQ0FBQyxXQUFXLEVBQUUsb0JBQWEsT0FBTyxHQUFHLENBQUMsZUFBSyxPQUFPLEdBQUcsQ0FBQyxNQUFHLENBQUMsQ0FBQztJQUVsRSxJQUFNLFlBQVksR0FBcUIsSUFBQSxRQUFHLEdBQUU7U0FDekMsUUFBUSxDQUFDLElBQUksQ0FBQztTQUNkLFdBQVcsQ0FBQyxHQUFHLENBQUM7U0FDaEIsV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBCLElBQU0sWUFBWSxHQUFHLElBQUEsUUFBRyxHQUFFO1NBQ3ZCLFVBQVUsQ0FBQyxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDO1NBQzNCLEtBQUssQ0FBQyxVQUFDLENBQW1CLElBQUssT0FBQSxDQUFDLENBQUMsS0FBSyxFQUFQLENBQU8sQ0FBQyxDQUFDO0lBRTNDLElBQU0sSUFBSSxHQUFHLEdBQUc7U0FDYixTQUFTLEVBQUU7U0FDWCxJQUFJLENBQUMsWUFBWSxDQUFDLElBQTJCLENBQUMsQ0FBQztTQUMvQyxLQUFLLEVBQUUsQ0FBQztJQUNYLElBQUk7U0FDRCxNQUFNLENBQUMsTUFBTSxDQUFDO1NBQ2QsSUFBSSxDQUFDLEdBQUcsRUFBRSxZQUFZLENBQUM7U0FDdkIsS0FBSyxDQUFDLE1BQU0sRUFBRSxVQUFDLENBQUMsRUFBRSxDQUFDLElBQUssT0FBQSxrQkFBTSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEVBQXZCLENBQXVCLENBQUM7U0FDaEQsVUFBVSxFQUFFO1NBQ1osUUFBUSxDQUFDLEdBQUcsQ0FBQztTQUNiLFNBQVMsQ0FBQyxHQUFHLEVBQUUsVUFBVSxDQUFRO1FBQ2hDLElBQU0sQ0FBQyxHQUFHLElBQUEsZ0JBQVcsRUFBQyxDQUFDLENBQUMsVUFBVSxFQUFFLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNoRCxPQUFPLFVBQVUsQ0FBQztZQUNoQixDQUFDLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNsQixPQUFPLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN6QixDQUFDLENBQUM7SUFDSixDQUFDLENBQUMsQ0FBQztJQUVMLElBQUk7U0FDRCxNQUFNLENBQUMsTUFBTSxDQUFDO1NBQ2QsSUFBSSxDQUFDLGFBQWEsRUFBRSxRQUFRLENBQUM7U0FDN0IsSUFBSSxDQUNILFVBQUMsQ0FBbUIsSUFBSyxPQUFBLFVBQUcsSUFBQSw0QkFBbUIsRUFBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBRyxFQUE5QyxDQUE4QyxDQUN4RSxDQUFDLGFBQWE7U0FDZCxLQUFLLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDLGNBQWM7U0FDcEMsS0FBSyxDQUFDLFdBQVcsRUFBRSxNQUFNLENBQUMsQ0FBQyxhQUFhO1NBQ3hDLElBQUksQ0FBQyxXQUFXLEVBQUUsVUFBQyxDQUFDO1FBQ2IsSUFBQSxLQUFTLFlBQVksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLEVBQWhDLENBQUMsUUFBQSxFQUFFLENBQUMsUUFBNEIsQ0FBQztRQUN4QyxPQUFPLG9CQUFhLENBQUMsZUFBSyxDQUFDLE1BQUcsQ0FBQztJQUNqQyxDQUFDLENBQUM7U0FDRCxLQUFLLENBQUMsV0FBVyxFQUFFLENBQUMsQ0FBQztTQUNyQixVQUFVLEVBQUU7U0FDWixRQUFRLENBQUMsR0FBRyxDQUFDO1NBQ2IsS0FBSyxDQUFDLFdBQVcsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUU5QixtQkFBbUI7SUFDbkIsR0FBRztTQUNBLE1BQU0sQ0FBQyxRQUFRLENBQUM7U0FDaEIsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUM7U0FDYixJQUFJLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQztTQUNiLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUMsc0NBQXNDO1NBQ3JELElBQUksQ0FBQyxNQUFNLEVBQUUsYUFBYSxDQUFDO1NBQzNCLFVBQVUsRUFBRTtTQUNaLFFBQVEsQ0FBQyxHQUFHLENBQUM7U0FDYixJQUFJLENBQUMsY0FBYyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBQzdCLENBQUMsQ0FBQztBQUVGLGtCQUFlLFNBQVMsQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvaG9tZS91c2VyL1JlYWN0IFByb2plY3RzL3BheW1lbnQtcmVwb3J0cy10ZXN0LXRhc2stbWFzdGVyLXVwZGF0ZWQvcGF5bWVudC1yZXBvcnRzLXRlc3QtdGFzay1tYXN0ZXIvc3JjL2NvbXBvbmVudHMvRG9udXRDaGFydC9kcmF3Q2hhcnQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2VsZWN0LCBhcmMsIGludGVycG9sYXRlLCBwaWUgfSBmcm9tIFwiZDNcIjtcbmltcG9ydCB7IHRvdGFsRG9udXRWYWx1ZSwgY2FsY3VsYXRlUGVyY2VudGFnZSB9IGZyb20gXCJ1dGlsL2hlbHBlclwiO1xuaW1wb3J0IHsgVEdlbmVyaWNEYXRhVHlwZSwgR2VuZXJpY1RhYmxlRGF0YSB9IGZyb20gXCJ0eXBlc1wiO1xuaW1wb3J0IHsgY29sb3JzIH0gZnJvbSBcInV0aWwvY29uc3RhbnRzXCI7XG5pbXBvcnQgeyBEVHlwZSwgRGF0YVR5cGUgfSBmcm9tIFwiLi90eXBlc1wiO1xuXG5jb25zdCBkcmF3Q2hhcnQgPSAoZWxlbWVudDogc3RyaW5nLCBkYXRhOiBHZW5lcmljVGFibGVEYXRhW10pID0+IHtcbiAgY29uc3QgdG90YWwgPSB0b3RhbERvbnV0VmFsdWUoZGF0YSk7XG4gIGNvbnN0IGJveFNpemUgPSA1MDA7XG5cbiAgc2VsZWN0KGVsZW1lbnQpLnNlbGVjdChcInN2Z1wiKS5yZW1vdmUoKTtcbiAgY29uc3Qgc3ZnID0gc2VsZWN0KGVsZW1lbnQpXG4gICAgLmFwcGVuZChcInN2Z1wiKVxuICAgIC5hdHRyKFwicHJlc2VydmVBc3BlY3RSYXRpb1wiLCBcInhNaWRZTWlkIG1lZXRcIilcbiAgICAuYXR0cihcImhlaWdodFwiLCBcIjEwMCVcIilcbiAgICAuYXR0cihcIndpZHRoXCIsIFwiMTAwJVwiKVxuICAgIC5hdHRyKFwidmlld0JveFwiLCBgMCAwICR7Ym94U2l6ZX0gJHtib3hTaXplfWApXG4gICAgLmFwcGVuZChcImdcIilcbiAgICAuYXR0cihcInRyYW5zZm9ybVwiLCBgdHJhbnNsYXRlKCR7Ym94U2l6ZSAvIDJ9LCAke2JveFNpemUgLyAyfSlgKTtcblxuICBjb25zdCBhcmNHZW5lcmF0b3I6IFRHZW5lcmljRGF0YVR5cGUgPSBhcmMoKVxuICAgIC5wYWRBbmdsZSgwLjAyKVxuICAgIC5pbm5lclJhZGl1cygxMDApXG4gICAgLm91dGVyUmFkaXVzKDI1MCk7XG5cbiAgY29uc3QgcGllR2VuZXJhdG9yID0gcGllKClcbiAgICAuc3RhcnRBbmdsZSgtMC43NSAqIE1hdGguUEkpXG4gICAgLnZhbHVlKChkOiBUR2VuZXJpY0RhdGFUeXBlKSA9PiBkLnZhbHVlKTtcblxuICBjb25zdCBhcmNzID0gc3ZnXG4gICAgLnNlbGVjdEFsbCgpXG4gICAgLmRhdGEocGllR2VuZXJhdG9yKGRhdGEgYXMgdW5rbm93biBhcyBEYXRhVHlwZSkpXG4gICAgLmVudGVyKCk7XG4gIGFyY3NcbiAgICAuYXBwZW5kKFwicGF0aFwiKVxuICAgIC5hdHRyKFwiZFwiLCBhcmNHZW5lcmF0b3IpXG4gICAgLnN0eWxlKFwiZmlsbFwiLCAoZCwgaSkgPT4gY29sb3JzW2kgJSBkYXRhLmxlbmd0aF0pXG4gICAgLnRyYW5zaXRpb24oKVxuICAgIC5kdXJhdGlvbig3MDApXG4gICAgLmF0dHJUd2VlbihcImRcIiwgZnVuY3Rpb24gKGQ6IERUeXBlKSB7XG4gICAgICBjb25zdCBpID0gaW50ZXJwb2xhdGUoZC5zdGFydEFuZ2xlLCBkLmVuZEFuZ2xlKTtcbiAgICAgIHJldHVybiBmdW5jdGlvbiAodCkge1xuICAgICAgICBkLmVuZEFuZ2xlID0gaSh0KTtcbiAgICAgICAgcmV0dXJuIGFyY0dlbmVyYXRvcihkKTtcbiAgICAgIH07XG4gICAgfSk7XG5cbiAgYXJjc1xuICAgIC5hcHBlbmQoXCJ0ZXh0XCIpXG4gICAgLmF0dHIoXCJ0ZXh0LWFuY2hvclwiLCBcIm1pZGRsZVwiKVxuICAgIC50ZXh0KFxuICAgICAgKGQ6IFRHZW5lcmljRGF0YVR5cGUpID0+IGAke2NhbGN1bGF0ZVBlcmNlbnRhZ2UodG90YWwsIGQuZGF0YS52YWx1ZSl9JWBcbiAgICApIC8vIGxhYmVsIHRleHRcbiAgICAuc3R5bGUoXCJmaWxsXCIsIFwiI2ZmZlwiKSAvLyBsYWJlbCBjb2xvclxuICAgIC5zdHlsZShcImZvbnQtc2l6ZVwiLCBcIjMwcHhcIikgLy8gbGFiZWwgc2l6ZVxuICAgIC5hdHRyKFwidHJhbnNmb3JtXCIsIChkKSA9PiB7XG4gICAgICBjb25zdCBbeCwgeV0gPSBhcmNHZW5lcmF0b3IuY2VudHJvaWQoZCk7XG4gICAgICByZXR1cm4gYHRyYW5zbGF0ZSgke3h9LCAke3l9KWA7XG4gICAgfSlcbiAgICAuc3R5bGUoXCJmb250LXNpemVcIiwgMClcbiAgICAudHJhbnNpdGlvbigpXG4gICAgLmR1cmF0aW9uKDcwMClcbiAgICAuc3R5bGUoXCJmb250LXNpemVcIiwgXCIyNnB4XCIpO1xuXG4gIC8vIEFkZCBpbm5lciBib3JkZXJcbiAgc3ZnXG4gICAgLmFwcGVuZChcImNpcmNsZVwiKVxuICAgIC5hdHRyKFwiY3hcIiwgMClcbiAgICAuYXR0cihcImN5XCIsIDApXG4gICAgLmF0dHIoXCJyXCIsIDEwMCkgLy8gc2hvdWxkIGJlIHNhbWUgYXMgaW5uZXJSYWRpdXMgdmFsdWVcbiAgICAuYXR0cihcImZpbGxcIiwgXCJ0cmFuc3BhcmVudFwiKVxuICAgIC50cmFuc2l0aW9uKClcbiAgICAuZHVyYXRpb24oNzAwKVxuICAgIC5hdHRyKFwic3Ryb2tlLXdpZHRoXCIsIDgpO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgZHJhd0NoYXJ0O1xuIl0sInZlcnNpb24iOjN9