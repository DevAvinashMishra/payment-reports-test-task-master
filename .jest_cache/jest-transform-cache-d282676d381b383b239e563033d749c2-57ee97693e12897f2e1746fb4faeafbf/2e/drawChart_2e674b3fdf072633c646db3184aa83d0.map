{"version":3,"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","names":["drawChart","element","data","total","boxSize","select","remove","svg","append","attr","arcGenerator","padAngle","innerRadius","outerRadius","pieGenerator","startAngle","Math","PI","value","d","arcs","selectAll","enter","style","i","length","transition","duration","attrTween","endAngle","t","text","centroid","x","y","exports"],"sources":["/home/user/React Projects/payment-reports-test-task-master-updated/payment-reports-test-task-master/src/components/DonutChart/drawChart.ts"],"sourcesContent":["import { select, arc, interpolate, pie } from \"d3\";\nimport { totalDonutValue, calculatePercentage } from \"util/helper\";\nimport { TGenericDataType, GenericTableData } from \"types\";\nimport { colors } from \"util/constants\";\nimport { DType, DataType } from \"./types\";\n\nconst drawChart = (element: string, data: GenericTableData[]) => {\n  const total = totalDonutValue(data);\n  const boxSize = 500;\n\n  select(element).select(\"svg\").remove();\n  const svg = select(element)\n    .append(\"svg\")\n    .attr(\"preserveAspectRatio\", \"xMidYMid meet\")\n    .attr(\"height\", \"100%\")\n    .attr(\"width\", \"100%\")\n    .attr(\"viewBox\", `0 0 ${boxSize} ${boxSize}`)\n    .append(\"g\")\n    .attr(\"transform\", `translate(${boxSize / 2}, ${boxSize / 2})`);\n\n  const arcGenerator: TGenericDataType = arc()\n    .padAngle(0.02)\n    .innerRadius(100)\n    .outerRadius(250);\n\n  const pieGenerator = pie()\n    .startAngle(-0.75 * Math.PI)\n    .value((d: TGenericDataType) => d.value);\n\n  const arcs = svg\n    .selectAll()\n    .data(pieGenerator(data as unknown as DataType))\n    .enter();\n  arcs\n    .append(\"path\")\n    .attr(\"d\", arcGenerator)\n    .style(\"fill\", (d, i) => colors[i % data.length])\n    .transition()\n    .duration(700)\n    .attrTween(\"d\", function (d: DType) {\n      const i = interpolate(d.startAngle, d.endAngle);\n      return function (t) {\n        d.endAngle = i(t);\n        return arcGenerator(d);\n      };\n    });\n\n  arcs\n    .append(\"text\")\n    .attr(\"text-anchor\", \"middle\")\n    .text(\n      (d: TGenericDataType) => `${calculatePercentage(total, d.data.value)}%`\n    ) // label text\n    .style(\"fill\", \"#fff\") // label color\n    .style(\"font-size\", \"30px\") // label size\n    .attr(\"transform\", (d) => {\n      const [x, y] = arcGenerator.centroid(d);\n      return `translate(${x}, ${y})`;\n    })\n    .style(\"font-size\", 0)\n    .transition()\n    .duration(700)\n    .style(\"font-size\", \"26px\");\n\n  // Add inner border\n  svg\n    .append(\"circle\")\n    .attr(\"cx\", 0)\n    .attr(\"cy\", 0)\n    .attr(\"r\", 100) // should be same as innerRadius value\n    .attr(\"fill\", \"transparent\")\n    .transition()\n    .duration(700)\n    .attr(\"stroke-width\", 8);\n};\n\nexport default drawChart;\n"]}