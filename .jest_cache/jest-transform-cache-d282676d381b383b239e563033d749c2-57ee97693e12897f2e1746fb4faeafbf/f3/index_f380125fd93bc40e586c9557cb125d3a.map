{"file":"/home/user/React Projects/payment-reports-test-task-master-updated/payment-reports-test-task-master/src/components/Date/index.tsx","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,2CAA+B;AAC/B,sEAAgD;AAChD,2EAAqD;AACrD,uFAAiE;AACjE,mEAA6C;AAE7C,uBAAqB;AAOrB,SAAwB,YAAY,CAAC,EAAwC;QAAtC,YAAY,kBAAA,EAAE,YAAY,kBAAA;IACzD,IAAA,KAAoB,KAAK,CAAC,QAAQ,CAAc,IAAI,CAAC,EAApD,KAAK,QAAA,EAAE,QAAQ,QAAqC,CAAC;IAC5D,IAAM,gBAAgB,GAAG,UAAC,MAAmB;QAC3C,YAAY,CAAC,MAAqB,CAAC,CAAC;IACtC,CAAC,CAAC;IAEF,OAAO,CACL,uBAAC,8BAAoB,aACnB,WAAW,EAAE,wBAAc,EAC3B,QAAQ,EAAE,gBAAgB,CAAC,KAAK,CAAC,EACjC,EAAE,EAAE,EAAC,MAAM,EAAC,MAAM,EAAC,gBAEnB,uBAAC,oBAAU,IACT,KAAK,EAAE,YAAY,EACnB,KAAK,EAAE,KAAK,EACZ,QAAQ,EAAE,UAAC,QAAQ;gBACjB,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACrB,CAAC,EACD,WAAW,EAAE,UAAC,MAAM;;gBAAK,OAAA,CACvB,uBAAC,mBAAS,eAAK,MAAM,IAAE,UAAU,EAAE,MAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,UAAU,0CAAE,WAAW,YAAI,CACvE,CAAA;aAAA,WACD,YACmB,CACxB,CAAC;AACJ,CAAC;AAxBD,+BAwBC","names":[],"sources":["/home/user/React Projects/payment-reports-test-task-master-updated/payment-reports-test-task-master/src/components/Date/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DatePicker from \"@mui/lab/DatePicker\";\nimport { TDateTarget } from \"types\";\nimport \"./style.css\";\n\ntype DateType = {\n  initialLabel: string;\n  handleChange: (e: TDateTarget) => void;\n};\n\nexport default function DateSelector({ initialLabel, handleChange }: DateType) {\n  const [value, setValue] = React.useState<Date | null>(null);\n  const handleChangeDate = (target: Date | null) => {\n    handleChange(target as TDateTarget);\n  };\n\n  return (\n    <LocalizationProvider\n      dateAdapter={AdapterDateFns}\n      onChange={handleChangeDate(value)}\n      sx={{border:'none'}}\n    >\n      <DatePicker\n        label={initialLabel}\n        value={value}\n        onChange={(newValue) => {\n          setValue(newValue);\n        }}\n        renderInput={(params) => (\n          <TextField {...params} helperText={params?.inputProps?.placeholder} />\n        )}\n      />\n    </LocalizationProvider>\n  );\n}\n"],"version":3}